
// preset form values if we receive a user object //
- user = typeof(udata) != 'undefined' ? udata : { }
// preset form values if we receive a member object //
- member = typeof(mdata) != 'undefined' ? mdata : { }
// store the userId on the client side in a hidden input field //
input(type='hidden', value= user._id)#userId
input(type='hidden', value=user.user)#user-tf

#account-form-container
	form(method="post")#account-form.form-vertical.well.span4
		h1
		p#sub1.subheading Enter Member Information
		hr
		fieldset
			#fname-cg.control-group
				label.control-label(for='fname-tf') First Name
				.controls
					input#name-tf.input-xlarge(type='text', name='fname', value= member.fname)
			#mname-cg.control-group
				label.control-label(for='mname-tf') Middle Name
				.controls
					input#name-tf.input-xlarge(type='text', name='mname', value= member.mname)
			#lname-cg.control-group
				label.control-label(for='lname-tf') Last Name
				.controls	
					input#name-tf.input-xlarge(type='text', name='lname', value= member.lname)
			#email-cg.control-group
				label.control-label(for='email-tf') Email
				.controls
					input#email-tf.input-xlarge(type='text', name='email', value= member.email)
			#clist-cg.control-group
				label.control-label(for='state-list') State
				.controls
					select#state-list(name='state')
						each item in states
							option(selected=item.name == member.state)= item.name
//			hr
//			.form-actions
//				button(type='button')#account-form-btn1.btn
//				button(type='submit')#account-form-btn2.btn

// display form errors in a custom modal window //

include modals/form-errors
